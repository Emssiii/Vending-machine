# Mc's machine - Unique Vending Machine Program

# Dictionary to store items with codes and prices
menu = {
    "101": ("Mc's Special Toy", 7.25),
    "102": ("Mc's Own Special Milk", 5.50),
    "103": ("Mc's Special Chocolate", 1.50),
    "104": ("Mc's Special Water", 1.75),
    "105": ("Mc's Special Fresh Fruit Juice", 2.50)
}

# Function to display the menu dynamically
def display_menu():
    print("\n--- Welcome to Vending Snacks! ---")
    print("What would you like to have today? Here are the choices:")
    for code, (item, price) in menu.items():
        print(f"[Code {code}] {item}: ${price:.2f}")
    print("\nNote: Type 'exit' anytime to cancel.")

# Function to calculate and dispense change
def dispense_change(amount_due, amount_paid):
    change = round(amount_paid - amount_due, 2)
    if change > 0:
        print(f"Here’s your change: ${change:.2f}. Don’t forget to grab it!")
    elif change == 0:
        print("Perfect payment! No change needed.")
    return change

# Main vending machine logic
def vending_machine():
    while True:
        display_menu()

        # Prompt user for their selection
        user_code = input("\nEnter the code of the item you’d like: ").strip()

        # Exit condition
        if user_code.lower() == 'exit':
            print("Thank you for using Mc's Special Machine! I hope to see you next time!")
            break

        # Validate code
        if user_code not in menu:
            print("Hmm, that code doesn’t match any item. Please try again.")
            continue

        # Get item details
        item_name, item_price = menu[user_code]
        print(f"You’ve chosen {item_name}, which costs ${item_price:.2f}.")

        # Process payment
        try:
            user_payment = float(input("Please insert your payment: $"))
        except ValueError:
            print("Invalid payment input. Let’s try again.")
            continue

        if user_payment < item_price:
            print(f"Insufficient funds! {item_name} costs ${item_price:.2f}, but you only provided ${user_payment:.2f}.")
            print("Transaction canceled. Please try again.")
            continue

        # Dispense item and change
        print(f"Dispensing {item_name}... Enjoy!")
        dispense_change(item_price, user_payment)

        # Optional feature: ask if the user wants another item
        another = input("Would you like to purchase another item? (yes/no): ").strip().lower()
        if another != 'yes':
            print("Thanks for using Mc's Special Machine! Have a good day:)")
            break

# Run the vending machine
if __name__ == "__main__":
    vending_machine()
